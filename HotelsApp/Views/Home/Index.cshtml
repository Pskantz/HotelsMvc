@model IEnumerable<HotelApp.Models.Hotel>

<form method="get" asp-controller="Home" asp-action="Index">
    <div class="d-flex justify-content-center mt-3">
        <div class="form-group col-md-6 mb-3">
            <div class="input-group">
                <input type="text" id="searchString" name="searchString" class="form-control" placeholder="Search hotels..." value="@ViewData["CurrentFilter"]" oninput="fetchSuggestions()" />
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
            <ul id="suggestions" class="list-group mt-2"></ul>
        </div>
    </div>
    <div class="d-flex justify-content-center mt-3">
        <div class="form-group col-md-3 mb-3">
            <input type="number" name="minPrice" class="form-control" placeholder="Min Price" value="@ViewData["MinPrice"]" />
        </div>
        <div class="form-group col-md-3 mb-3">
            <input type="number" name="maxPrice" class="form-control" placeholder="Max Price" value="@ViewData["MaxPrice"]" />
        </div>
    </div>
</form>

<div class="row mt-3">
    @foreach (var hotel in Model)
    {
        <div class="col-md-4" id="hotel-@hotel.Id">
            <div class="card mb-4 shadow-sm">
                <img src="@hotel.ImageUrl" class="card-img-top" alt="@hotel.Name">
                <div class="card-body">
                    <h5 class="card-title">@hotel.Name</h5>
                    <p class="card-text">@hotel.Location</p>
                    <p class="card-text">Price per night: @hotel.Price €</p>
                    @if (User.Identity?.Name == "admin@exampel.com")
                    {
                        <a href="@Url.Action("EditHotel", new { id = hotel.Id })" class="btn btn-warning">Edit</a>
                        <form asp-action="DeleteHotel" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@hotel.Id" />
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    }
                    else if (User.Identity?.Name != null)
                    {
                        <a href="@Url.Action("BookHotel", new { id = hotel.Id })" class="btn btn-primary">Book Now</a>
                    }
                    else
                    {
                        <p>Login to book</p>
                    }
                </div>
            </div>
        </div>
    }
</div>

<script>
    const isLoggedIn = @User.Identity?.IsAuthenticated.ToString().ToLower();

    async function fetchSuggestions() {
        const searchTerm = document.getElementById('searchString').value;
        const suggestionsList = document.getElementById('suggestions');
        suggestionsList.innerHTML = '';

        if (searchTerm.length < 3) {
            return;
        }

        const response = await fetch(`/Home/HotelSuggestions?searchTerm=${searchTerm}`);
        const suggestions = await response.json();

        suggestions.forEach(suggestion => {
            const li = document.createElement('li');
            li.classList.add('list-group-item');
            li.innerHTML = `
                <img src="${suggestion.imageUrl}" alt="${suggestion.name}" style="width: 50px; height: 50px; margin-right: 10px;">
                ${suggestion.name} - ${suggestion.location} - ${suggestion.price} €
            `;
            li.onclick = () => {
                if (isLoggedIn === 'true') {
                    window.location.href = `/Home/BookHotel?id=${suggestion.id}`;
                } else {
                    const hotelCard = document.getElementById(`hotel-${suggestion.id}`);
                    if (hotelCard) {
                        hotelCard.scrollIntoView({ behavior: 'smooth' });
                    }
                }
            };
            suggestionsList.appendChild(li);
        });
    }
</script>